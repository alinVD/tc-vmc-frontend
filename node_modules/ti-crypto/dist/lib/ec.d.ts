export declare type Curve = "P-256" | "P-384" | "P-521";
export interface ECDHKeyPair {
    public: ECDHPublic;
    private: ECDHPrivate;
}
export declare function genECDHPair(curve: Curve, exportable?: boolean): Promise<ECDHKeyPair>;
export declare function importECDHPublic(data: Uint8Array, format: "raw" | "spki", curve: Curve, exportable?: boolean): Promise<ECDHPublic>;
export declare class ECDHPublic {
    readonly key: CryptoKey;
    readonly curve: Curve;
    export(format: "raw" | "spki"): Promise<Uint8Array>;
    constructor(key: CryptoKey, curve: Curve);
}
export declare class ECDHPrivate {
    private readonly key;
    readonly curve: Curve;
    deriveBytes(pub: ECDHPublic, bytes?: number): Promise<Uint8Array>;
    constructor(key: CryptoKey, curve: Curve);
}
